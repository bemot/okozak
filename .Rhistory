tails_by_trial %>%
mutate(`bias to tails` = ifelse(number_of_tails >= 4, "equal or more ", "less than observed data")) %>%
ggplot(aes(x = number_of_tails, fill = `bias to tails`)) +
geom_bar() +
labs(title = "Number of Tails Seen in 6 Flips",
subtitle = "100 Trials", x = "# of tails", y = "times seen") +
scale_x_continuous(breaks = 0:6) +               #Beyond here is unneccesary ggplot style stuff.
theme_minimal() +                                #I like pretty graphs
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line( size=.1, color="black" ),
panel.grid.minor = element_blank(),
legend.position = "top") +
scale_fill_discrete(guide = guide_legend(reverse=T))
unusualness <- sum(tails_by_trial$number_of_tails >= 4)
unusualness
pvalue <= unusualness/100
pvalue
#need package dplyr
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(ggplot2)
#plot_flips function
#Function for plotting coin flips.
#Takes a dataframe with at least the column "flip" containing heads or tails in character value
plot_flips <- function(flip_data){
flip_data %>%
mutate(value = 1, flip_num = 1:dim(flip_data)[1]) %>%
ggplot(aes(x = flip, y = value, group = flip_num, fill = flip)) +
geom_bar(position = "stack", stat = "identity", color = "white") +
labs(x = "", y = "times seen", title = "Six Coin Flips") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank())
}
#Function to flip our coin 6 times
flip_coin <- function(numberOfCoins = 6, probHeads = 0.5){
heads <- runif(numberOfCoins) > probHeads
return(tibble(flip = ifelse(heads, "heads", "tails")))
}
#flip our virtual coin 6 times
second_flip <- flip_coin()
#plot it
second_flip %>% plot_flips()
# back to R
#Dataframe to hold our coin flips
flip_results <- tibble(flip = character(), trial = numeric())
#Number of trials of flipping our coin 6 times we want to do.
number_of_trials <- 100
#Actually run the trials
for(trial_number in 1:number_of_trials){
#Flip Coin 6 times and record results along with trial number
flips <- flip_coin() %>%
mutate(trial = trial_number)
#Append this to our big results dataframe
flip_results <- flip_results %>% bind_rows(flips)
}
#Let's plot all of these results into one big mega-graph
flip_results %>%
plot_flips() +
facet_wrap(~trial) + #make a new mini plot for each trial
labs(title = "Six Coin Flips | 100 Trials")
#Count how many tails we got in each trial
tails_by_trial <- flip_results %>%   #Take our results
filter(flip == "tails") %>%        #Look at only tails results
group_by(trial) %>%                #Collapse per trial
summarise(number_of_tails = n())   #Count the number of heads per trial
#Look at the first few of our results....
tails_by_trial %>%
head() %>%
kable(align = c("r", "c"))
tails_by_trial %>%
mutate(`bias to tails` = ifelse(number_of_tails >= 4, "equal or more ", "less than observed data")) %>%
ggplot(aes(x = number_of_tails, fill = `bias to tails`)) +
geom_bar() +
labs(title = "Number of Tails Seen in 6 Flips",
subtitle = "100 Trials", x = "# of tails", y = "times seen") +
scale_x_continuous(breaks = 0:6) +               #Beyond here is unneccesary ggplot style stuff.
theme_minimal() +                                #I like pretty graphs
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line( size=.1, color="black" ),
panel.grid.minor = element_blank(),
legend.position = "top") +
scale_fill_discrete(guide = guide_legend(reverse=T))
unusualness <- sum(tails_by_trial$number_of_tails >= 4)
unusualness
install.packages("knitr")
#need package dplyr
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(ggplot2)
library(knitr)
#plot_flips function
#Function for plotting coin flips.
#Takes a dataframe with at least the column "flip" containing heads or tails in character value
plot_flips <- function(flip_data){
flip_data %>%
mutate(value = 1, flip_num = 1:dim(flip_data)[1]) %>%
ggplot(aes(x = flip, y = value, group = flip_num, fill = flip)) +
geom_bar(position = "stack", stat = "identity", color = "white") +
labs(x = "", y = "times seen", title = "Six Coin Flips") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank())
}
#Function to flip our coin 6 times
flip_coin <- function(numberOfCoins = 6, probHeads = 0.5){
heads <- runif(numberOfCoins) > probHeads
return(tibble(flip = ifelse(heads, "heads", "tails")))
}
#flip our virtual coin 6 times
second_flip <- flip_coin()
#plot it
second_flip %>% plot_flips()
# back to R
#Dataframe to hold our coin flips
flip_results <- tibble(flip = character(), trial = numeric())
#Number of trials of flipping our coin 6 times we want to do.
number_of_trials <- 100
#Actually run the trials
for(trial_number in 1:number_of_trials){
#Flip Coin 6 times and record results along with trial number
flips <- flip_coin() %>%
mutate(trial = trial_number)
#Append this to our big results dataframe
flip_results <- flip_results %>% bind_rows(flips)
}
#Let's plot all of these results into one big mega-graph
flip_results %>%
plot_flips() +
facet_wrap(~trial) + #make a new mini plot for each trial
labs(title = "Six Coin Flips | 100 Trials")
#Count how many tails we got in each trial
tails_by_trial <- flip_results %>%   #Take our results
filter(flip == "tails") %>%        #Look at only tails results
group_by(trial) %>%                #Collapse per trial
summarise(number_of_tails = n())   #Count the number of heads per trial
#Look at the first few of our results....
tails_by_trial %>%
head() %>%
kable(align = c("r", "c"))
tails_by_trial %>%
mutate(`bias to tails` = ifelse(number_of_tails >= 4, "equal or more ", "less than observed data")) %>%
ggplot(aes(x = number_of_tails, fill = `bias to tails`)) +
geom_bar() +
labs(title = "Number of Tails Seen in 6 Flips",
subtitle = "100 Trials", x = "# of tails", y = "times seen") +
scale_x_continuous(breaks = 0:6) +               #Beyond here is unneccesary ggplot style stuff.
theme_minimal() +                                #I like pretty graphs
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line( size=.1, color="black" ),
panel.grid.minor = element_blank(),
legend.position = "top") +
scale_fill_discrete(guide = guide_legend(reverse=T))
unusualness <- sum(tails_by_trial$number_of_tails >= 4)
unusualness
pvalue = unusualness/100
pvalue
#need package dplyr
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(ggplot2)
library(knitr)
#plot_flips function
#Function for plotting coin flips.
#Takes a dataframe with at least the column "flip" containing heads or tails in character value
plot_flips <- function(flip_data){
flip_data %>%
mutate(value = 1, flip_num = 1:dim(flip_data)[1]) %>%
ggplot(aes(x = flip, y = value, group = flip_num, fill = flip)) +
geom_bar(position = "stack", stat = "identity", color = "white") +
labs(x = "", y = "times seen", title = "Six Coin Flips") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "bottom",
legend.title = element_blank())
}
#Function to flip our coin 6 times
flip_coin <- function(numberOfCoins = 6, probHeads = 0.5){
heads <- runif(numberOfCoins) > probHeads
return(tibble(flip = ifelse(heads, "heads", "tails")))
}
#flip our virtual coin 6 times
second_flip <- flip_coin()
#plot it
second_flip %>% plot_flips()
# back to R
#Dataframe to hold our coin flips
flip_results <- tibble(flip = character(), trial = numeric())
#Number of trials of flipping our coin 6 times we want to do.
number_of_trials <- 100
#Actually run the trials
for(trial_number in 1:number_of_trials){
#Flip Coin 6 times and record results along with trial number
flips <- flip_coin() %>%
mutate(trial = trial_number)
#Append this to our big results dataframe
flip_results <- flip_results %>% bind_rows(flips)
}
#Let's plot all of these results into one big mega-graph
flip_results %>%
plot_flips() +
facet_wrap(~trial) + #make a new mini plot for each trial
labs(title = "Six Coin Flips | 100 Trials")
#Count how many tails we got in each trial
tails_by_trial <- flip_results %>%   #Take our results
filter(flip == "tails") %>%        #Look at only tails results
group_by(trial) %>%                #Collapse per trial
summarise(number_of_tails = n())   #Count the number of heads per trial
#Look at the first few of our results....
tails_by_trial %>%
head() %>%
kable(align = c("r", "c"))
tails_by_trial %>%
mutate(`bias to tails` = ifelse(number_of_tails >= 4, "equal or more ", "less than observed data")) %>%
ggplot(aes(x = number_of_tails, fill = `bias to tails`)) +
geom_bar() +
labs(title = "Number of Tails Seen in 6 Flips",
subtitle = "100 Trials", x = "# of tails", y = "times seen") +
scale_x_continuous(breaks = 0:6) +               #Beyond here is unneccesary ggplot style stuff.
theme_minimal() +                                #I like pretty graphs
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line( size=.1, color="black" ),
panel.grid.minor = element_blank(),
legend.position = "top") +
scale_fill_discrete(guide = guide_legend(reverse=T))
unusualness <- sum(tails_by_trial$number_of_tails >= 4)
unusualness
pvalue = unusualness/100
pvalue
library(gdata)                   # load gdata package
mydata = read.xls("/home/sasha/ECONOMICS/IAE/OlgaKozak/7.xls")  # read from first sheet
library(micEcon)
library(micEconAids)
priceNames <- c( "p_bread","p_meat","p_fish","p_milk_cheese", "p_butter", "p_oil", "p_sugar")
shareNames <- c( "w_bread","w_meat","w_fish","w_milk_cheese", "w_butter", "w_oil", "w_sugar")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data = mydata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
install.packages("gdata")
install.packages("micEcon")
3
install.packages("gdata")
library(gdata)                   # load gdata package
mydata = read.xls("/home/sasha/ECONOMICS/IAE/OlgaKozak/7.xls")  # read from first sheet
View(mydata)
View(mydata)
library(micEcon)
3
install.packages("micEcon")
3
install.packages("micEconAids")
library(gdata)                   # load gdata package
mydata = read.xls("/home/sasha/ECONOMICS/IAE/OlgaKozak/7.xls")  # read from first sheet
library(micEcon)
library(micEconAids)
priceNames <- c( "p_bread","p_meat","p_fish","p_milk_cheese", "p_butter", "p_oil", "p_sugar")
shareNames <- c( "w_bread","w_meat","w_fish","w_milk_cheese", "w_butter", "w_oil", "w_sugar")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data = mydata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
A
A <-matrix(c(0,0,0.5,0.5,1,0,0,0.5,0,0.5,0,0,0,0.5,0.5,0),4,4,byrow=TRUE)
A
A <-matrix(c(0,0,0.5,0.5,1,0,0,0.5,0,0.5,0,0,0,0.5,0.5,0),4,4,byrow=TRUE)
A
ev <- eigen(A)
ev
ev <- eigen(A)
ev
A <-matrix(c(0,0,0.5,0.5,1,0,0,0.5,0,0.5,0,0,0,0.5,0.5,0),4,4,byrow=TRUE)
A
ev <- eigen(A)
(values <- ev$values)
(vectors <- ev$vectors)
A <-matrix(c(0,0,0.5,0.5,1,0,0,0.5,0,0.5,0,0,0,0.5,0.5,0),4,4,byrow=TRUE)
A
ev <- eigen(A)
(values <- ev$values)
(vectors <- ev$vectors)
View(A)
View(A)
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
ibrary(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
library(micEcon)
library(micEconAids)
priceNames <- c( "p_bread","p_meat","p_fish","p_milk","p_eggs","p_fat","p_butter", "p_oil")
shareNames <- c( "w_bread","w_meat","w_fish","w_milk","w_eggs","w_fat","w_butter", "w_oil")
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
library(micEcon)
library(micEconAids)
priceNames <- c( "p_bread","p_meat","p_fish","p_milk","p_eggs","p_fat","p_butter", "p_oil")
shareNames <- c( "w_bread","w_meat","w_fish","w_milk","w_eggs","w_fat","w_butter", "w_oil")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
bread_oil <- read.csv2("~/ECONOMICS/IAE/OlgaKozak/bread_oil.csv")
View(bread_oil)
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
library(micEcon)
library(micEconAids)
priceNames <- c( "p_bread","p_meat","p_fish","p_milk","p_eggs","p_fat","p_butter", "p_oil")
shareNames <- c( "w_bread","w_meat","w_fish","w_milk","w_eggs","w_fat","w_butter", "w_oil")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
bread_oil <- read.csv("~/ECONOMICS/IAE/OlgaKozak/bread_oil.csv", sep=";")
View(bread_oil)
newdata <-bread_oil
newdata <-bread_oil
library(micEcon)
library(micEconAids)
priceNames <- c( "p_bread","p_meat","p_fish","p_milk","p_eggs","p_fat","p_butter", "p_oil")
shareNames <- c( "w_bread","w_meat","w_fish","w_milk","w_eggs","w_fat","w_butter", "w_oil")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
#newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
newdata <-bread_oil
library(micEcon)
library(micEconAids)
priceNames <- c( "p_bread","p_meat","p_fish","p_milk","p_eggs","p_fat","p_butter", "p_oil")
shareNames <- c( "w_bread","w_meat","w_fish","w_milk","w_eggs","w_fat","w_butter", "w_oil")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
#priceNames <- c( "p_bread","p_meat","p_fish","p_milk","p_eggs","p_fat","p_butter", "p_oil","p_fruits","p_veg","p_potato", "p_sugar","p_noalko")
#shareNames <- c( "w_bread","w_meat","w_fish","w_milk","w_eggs","w_fat","w_butter", "w_oil","w_fruits","w_veg","w_potato", "w_sugar","w_noalko")
#w_bread;w_meat;w_fish;w_milk;w_eggs;w_fat;w_butter;w_oil;p_bread;p_meat;p_fish;p_milk;p_eggs;p_fat;p_butter;p_oil
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
#newdata <-bread_oil
library(micEcon)
library(micEconAids)
priceNames <- c( "p_fruits","p_veg","p_potato", "p_sugar","p_noalko")
shareNames <- c( "w_fruits","w_veg","w_potato", "w_sugar","w_noalko")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
fruits_noalko <- read.csv2("~/ECONOMICS/IAE/OlgaKozak/fruits_noalko.csv")
View(fruits_noalko)
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
#newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
newdata <-fruits_noalko
library(micEcon)
library(micEconAids)
priceNames <- c( "p_fruits","p_veg","p_potato", "p_sugar","p_noalko")
shareNames <- c( "w_fruits","w_veg","w_potato", "w_sugar","w_noalko")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
#newdata <-fruits_noalko
library(micEcon)
library(micEconAids)
priceNames <- c( "p_fruits","p_veg", "p_sugar","p_noalko")
shareNames <- c( "w_fruits","w_veg", "w_sugar","w_noalko")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
fruits_noalko <- read.csv2("~/ECONOMICS/IAE/OlgaKozak/fruits_noalko.csv")
View(fruits_noalko)
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
#newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
newdata <-fruits_noalko
library(micEcon)
library(micEconAids)
priceNames <- c( "p_fruits","p_veg", "p_sugar","p_noalko")
shareNames <- c( "w_fruits","w_veg", "w_sugar","w_noalko")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
#newdata <-fruits_noalko
library(micEcon)
library(micEconAids)
priceNames <- c( "p_fruits","p_veg", "p_sugar","p_noalko")
shareNames <- c( "w_fruits","w_veg", "w_sugar","w_noalko")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
fruits_noalko <- read.csv("~/ECONOMICS/IAE/OlgaKozak/fruits_noalko.csv", sep=";")
View(fruits_noalko)
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
#newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
newdata <-fruits_noalko
library(micEcon)
library(micEconAids)
priceNames <- c( "p_fruits","p_veg", "p_sugar","p_noalko")
shareNames <- c( "w_fruits","w_veg", "w_sugar","w_noalko")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
library(gdata)
# load gdata package
setwd("/home/sasha/ECONOMICS/IAE/OlgaKozak/")
#newdata = read.xls("13.xls")  # read from first sheet
#newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
newdata <-fruits_noalko
library(micEcon)
library(micEconAids)
priceNames <- c( "p_fruits","p_veg", "p_sugar","p_noalko")
shareNames <- c( "w_fruits","w_veg", "w_sugar","w_noalko")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
