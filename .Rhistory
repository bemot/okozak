class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
census <- read.csv(file="/home/alex/IAE/UKRAINE/population_table_rotated.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$all_popul, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast.Arima(model1, h = 1)
model1.prediction
model1.prediction <- forecast.arima(model1, h = 1)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population_table_rotated.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$all_popul, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast.arima(model1, h = 1)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population_table_rotated.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$all_popul, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast.Arima(model1, h = 1)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population_table_rotated.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$all_popul, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast.Arima(model1, h = 1)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population_table_rotated.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$all_popul, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 1)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population_table_rotated.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$all_popul, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 1)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population_table_rotated.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$all_popul, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$all_popul, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
View(census)
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 1)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 1)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,1))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 1)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,1))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 10)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,2))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 10)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,1))
model1
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,1))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 10)
model1.prediction
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,1))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 5)
model1.prediction
plot.forecast(model2.prediction, xlab = "Years", ylab = "Population", main = "Expected population in 2021")
plot.forecast(model1.prediction, xlab = "Years", ylab = "Population", main = "Expected population in 2021")
plot(model1.prediction, xlab = "Years", ylab = "Population", main = "Expected population in 2021")
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,1))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 1)
model1.prediction
plot(model1.prediction, xlab = "Years", ylab = "Population", main = "Expected population in 2021")
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
View(census)
census
census.ts
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,1))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 1)
model1.prediction
plot(model1.prediction, xlab = "Years", ylab = "Population", main = "Expected population in 2020")
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,1))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 10)
model1.prediction
plot(model1.prediction, xlab = "Years", ylab = "Population", main = "Expected population in 2029")
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,1))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 10)
model1.prediction
plot(model1.prediction, xlab = "Years", ylab = "Population", main = "Expected population in 2029")
census <- read.csv(file="/home/alex/IAE/UKRAINE/population.csv", header=TRUE, sep=";")
class(census)
census.ts <- ts(census$population, start = 1990, deltat = 1)
class(census.ts)
plot(census.ts, main = "Population trend of Ukraine", xlab = "Years", ylab = "Population")
acf(census.ts)
pacf(census.ts)
require(forecast)
census.ts
auto.arima(census.ts)
model1 <- arima(census.ts, order = c(0,1,0))
model1
model1.res <- residuals(model1)
shapiro.test(model1.res)
acf(model1.res)
plot(model1.res)
model1.prediction <- forecast(model1, h = 10)
model1.prediction
plot(model1.prediction, xlab = "Years", ylab = "Population", main = "Expected population in 2029")
library(gdata)                   # load gdata package
mydata = read.xls("/home/sasha/ECONOMICS/IAE/OlgaKozak/13.xls")  # read from first sheet
library(micEcon)
library(micEconAids)
priceNames <- c( "p_bread","p_meat","p_fish","p_milk","p_eggs","p_fat", "p_butter", "p_oil","p_fruits","p_vegetables","p_potato", "p_sugar","p_noalko")
shareNames <- c( "w_bread","w_meat","w_fish","w_milk","w_eggs","w_fat", "w_butter", "w_oil","w_fruits","w_vegetables","w_potato", "w_sugar","w_noalko")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data = mydata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
View(bad)
View(bad)
library(gdata)                   # load gdata package
mydata = read.xls("/home/sasha/ECONOMICS/IAE/OlgaKozak/13.xls")  # read from first sheet
library(gdata)                   # load gdata package
mydata = read.xls("/home/sasha/ECONOMICS/IAE/OlgaKozak/13.xls")  # read from first sheet
library(gdata)                   # load gdata package
mydata = read.xls("/home/sasha/ECONOMICS/IAE/okozak/13.xls")  # read from first sheet
library(gdata)                   # load gdata package
mydata = read.xls("/home/sasha/ECONOMICS/IAE/OlgaKozak/2019_AIDS/okozak/13.xls")  # read from first sheet
library("micEcon", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
library("micEconAids", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
install.packages('lazyeval')
library("micEconAids", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
install.packages("readxl")
install.packages("readxl")
install.packages("readxl")
install.packages("readxl")
library("micEconAids", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
library("micEconAids", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
library("micEconAids", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
library("micEconAids", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
install.packages("readxl")
install.packages("progress")
install.packages("prettyunits")
install.packages("prettyunits")
install.packages("prettyunits")
save.image("~/sasha.RData")
install.packages("prettyunits")
install.packages("httr")
library("micEconAids", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
install.packages("prettyunits")
install.packages("prettyunits")
library("micEconAids", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
install.packages("prettyunits")
install.packages("prettyunits")
install.packages("prettyunits")
install.packages("prettyunits")
install.packages("prettyunits")
install.packages("prettyunits")
install.packages("prettyunits")
install.packages("prettyunits")
install.packages("prettyunits")
options(repos = c(CRAN = "https://cran.rstudio.com"))
install.packages("prettyunits")
install.packages("prettyunits")
options(repos = c(CRAN = "https://cran.rstudio.com"))
available.packages()
available.packages()
available.packages()
options(repos = c(CRAN = "http://cran.rstudio.com"))
available.packages()
install.packages("prettyunits")
library("micEcon", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
library("micEconAids", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.5")
install.packages("prettyunits")
library(broom)
library(car)
force(makePrototypeFromClassDef)
library(askpass)
library(assertthat)
library(AUC)
library(lazyeval)
library(modeltools)
library(mnormt)
library(modelr)
library(miscTools)
library(highr)
library(gravity)
library(glue)
library(gtools)
library(gtable)
library(growthmodels)
library(maptools)
library(micEcon)
library(micEconAids)
detach("package:micEconAids", unload = TRUE)
library(micEconAids)
install.packages("prediction")
library(micEconAids)
library(gdata)
# load gdata package
setwd("/home/alex/ECONOMICS/IAE/OLGA_KOZAK/2019_AIDS/okozak")
#newdata = read.xls("13.xls")  # read from first sheet
newdata <- read.csv(file="fruits_noalko.csv", header=TRUE, sep=";")
library(micEcon)
library(micEconAids)
priceNames <- c( "p_bread","p_meat","p_fish","p_milk","p_eggs","p_fat","p_butter", "p_oil")
shareNames <- c( "w_bread","w_meat","w_fish","w_milk","w_eggs","w_fat","w_butter", "w_oil")
## LA-AIDS
estResult <- aidsEst( priceNames, shareNames, "xfood", data=newdata)
print( estResult )
elas( estResult )
summary(estResult )
lrtest(estResult,estResult)
checkConsist( estResult )
#priceNames <- c( "p_bread","p_meat","p_fish","p_milk","p_eggs","p_fat","p_butter", "p_oil","p_fruits","p_veg","p_potato", "p_sugar","p_noalko")
#shareNames <- c( "w_bread","w_meat","w_fish","w_milk","w_eggs","w_fat","w_butter", "w_oil","w_fruits","w_veg","w_potato", "w_sugar","w_noalko")
#w_bread;w_meat;w_fish;w_milk;w_eggs;w_fat;w_butter;w_oil;p_bread;p_meat;p_fish;p_milk;p_eggs;p_fat;p_butter;p_oil
library(micEconAids)
